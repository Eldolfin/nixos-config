name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check-systems:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        hostname: ["oscar-portable", "oscar-tour"]
    steps:
      - name: maximize build space
        # from https://github.com/easimon/maximize-build-space/blob/master/action.yml
        run: |
          echo "Removing unwanted software... "
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          echo "... done"
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      # this actually slows down the build
      # - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: DeterminateSystems/flake-checker-action@main
      - name: Build system config
        run: nix build '#nixosConfigurations.${{ matrix.hostname }}.config.system.build.toplevel'

  check-standalone-homemanager:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      # - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: replace 'oscar' with current username
        run: find ./homes -type f -name '*.nix' -exec sed -i "s/oscar/$(whoami)/g" {} +
      - run: nix run home-manager/master -- switch --flake ./homes/oscar

  integration-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: maximize build space
        # from https://github.com/easimon/maximize-build-space/blob/master/action.yml
        run: |
          echo "Removing unwanted software... "
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          echo "... done"
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          enable_kvm: true
          extra_nix_config: "system-features = nixos-test benchmark big-parallel kvm"

      - name: Test system config
        run: |
          nix flake check -L
          mkdir -p screenshots/
          cp /nix/store/*vm-test-run*/*.png screenshots/

      - name: Upload screenshots as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tests-screenshots
          path: screenshots/
          if-no-files-found: error

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./screenshots/
          keep_files: true

      - name: Comment PR with test screenshots
        if: github.event_name != 'pull_request'
        uses: thollander/actions-comment-pull-request@v3
        with:
          message: |
            :wave: Screenshots from the last test run
          comment-tag: test-screenshots
